# ЭТУ задачу ТАКЖЕ СМОГ еще решить через map - ВОТ как это можно сделать!

def openOrSenior(data)
  data.map { |age, handicap| age >= 55 && handicap > 7 ? "Senior" : "Open" }
end
=begin
используем тернарный оператор вида УСЛОВИЕ ? ДЕЙСТВИЕ ЕСЛИ УСЛОВИЕ СОБЛЮДЕНО : ДЕЙСТВИЕ ЕСЛИ ОНО НЕ СОБЛЮДЕНО
где 
|age, handicap| - присвоение значнием подмассива имени переменных
age >= 55 && handicap > 7 - само условие - напсианное из задачи
"Senior" - выражение при соблюдении условия
"Open" - выражение при не соблюдении условий
=end

# Ниже решение которое было первым до оптимизации кода!

def open_or_senior(data)
  #your code here
  data_fin = []
  for i in (0...data.size) # ДИАПАЗОН УКАЗЫВАЕТСЯ С 3 ТОЧКАМИ для обычных интервалов for указывается с 2 точками!!!
    if data.dig(i,0) >= 55 and data.dig(i,1) > 7
=begin
dig(*args) публичный
Извлекает вложенное значение, заданное последовательностью ключевых объектов, вызывая dig на каждом шаге и возвращая nil , если какой-либо промежуточный шаг равен nil .
=end
    data_fin.push('Senior')
else
    data_fin.push('Open')
end
end
  return data_fin
end
